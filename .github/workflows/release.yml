name: Go Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  lint:
    name: Lint Go project
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.6

      - name: Set up Go
        uses: actions/setup-go@v5.0.1
        with:
          go-version: '1.22'
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6.0.1
        with:
          version: v1.56.0

  test:
    name: Test Go project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.6

      - name: Set up Go
        uses: actions/setup-go@v5.0.1
        with:
          go-version: '1.22'
          cache: false
      - name: Test
        run: go test -v ./...

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    env:
      PREFIX_TAG: ${{ secrets.DOCKER_USERNAME }}/${{ vars.APP_NAME }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.6

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0

      - name: Login to Docker Hub
        uses: docker/login-action@v3.2.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract version from tag
        id: extract_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Short SHA
        id: sha
        run: echo "SHA_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Pull Docker image
        run: docker pull ${{ env.PREFIX_TAG }}:${{ steps.sha.outputs.sha_short }}

      - name: Tag Docker image
        run: |
          docker tag ${{ env.PREFIX_TAG }}:${{ steps.sha.outputs.sha_short }} ${{ env.PREFIX_TAG }}:${{ env.VERSION }}
          docker tag ${{ env.PREFIX_TAG }}:${{ steps.sha.outputs.sha_short }} ${{ env.PREFIX_TAG }}:latest

      - name: Push Docker image
        run: | 
          docker push ${{ env.PREFIX_TAG }}:${{ env.VERSION }}
          docker push ${{ env.PREFIX_TAG }}:latest